# Creating the box plots by analogy with the p112
p114 <- ggplot(centrobank, aes( x = 1, y = JPY_392)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'brown') +
stat_summary(fun.y=mean, colour="black", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p115 <- ggplot(centrobank, aes( x = 1, y = CNY_156)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'brown') +
stat_summary(fun.y=mean, colour="black", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p116 <- ggplot(centrobank, aes( x = 1, y = INR_356)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'brown') +
stat_summary(fun.y=mean, colour="black", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p117 <- ggplot(centrobank, aes( x = 1, y = BRL_986)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'purple') +
stat_summary(fun.y=mean, colour="black", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p120 <- ggplot(centrobank, aes( x = 1, y = gold)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'blue') +
stat_summary(fun.y=mean, colour="darkblue", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p121 <- ggplot(centrobank, aes( x = 1, y = silver)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'blue') +
stat_summary(fun.y=mean, colour="darkblue", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p122 <- ggplot(centrobank, aes( x = 1, y = platinum)) + geom_boxplot() +
geom_jitter(alpha=0.4, size = 1, color = 'blue') +
stat_summary(fun.y=mean, colour="darkblue", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p123 <- ggplot(centrobank, aes( x = 1, y = palladium)) + geom_boxplot() +
geom_jitter(alpha=0.4, color = 'blue') +
stat_summary(fun.y=mean, colour="darkblue", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p118 <- ggplot(centrobank, aes( x = 1, y = foreign_exchange_reserves)) +
geom_boxplot() +  geom_jitter(alpha=0.4, color = 'red') +
stat_summary(fun.y=mean, colour="brown", geom="point",
shape=8, size=3)
# Creating the box plots by analogy with the p112
p119 <- ggplot(centrobank, aes( x = 1, y = monetary_gold)) + geom_boxplot() +
geom_jitter(alpha=0.4, color = 'green') +
stat_summary(fun.y=mean, colour="darkgreen", geom="point",
shape=8, size=3)
# Combining the box plots
g104<- grid.arrange(p112, p113, p114, p115, p116, p117,
p118, p119, p120, p121, p122, p123, ncol = 4)
# Creating the path for the image
path06=paste(p, 'Univariate_Plots_17_1.png', sep = '')
# Saving the image with histograms
ggsave(path06, g104, width = 12, height = 24)
# Creating the variable for names of main indicators
include <- c("dual_currency_basket", "EUR_978", "USD_840", "JPY_392", "CNY_156",
"BRL_986", "INR_356", "gold", "silver", "platinum", "palladium",
"foreign_exchange_reserves", "monetary_gold")
# Creating the subset with main indicators
corr_centrobank <- (centrobank[,include])
# Displaying the information about the variables in the subset
str(corr_centrobank)
# Combining the box plots
g104<- grid.arrange(p112, p113, p114, p115, p116, p117,
p118, p119, p120, p121, p122, p123, ncol = 4)
# Creating the path for the image
path06=paste(p, 'Univariate_Plots_17_1.png', sep = '')
# Saving the image with histograms
ggsave(path06, g104, width = 12, height = 24)
# Creating the correlation chart from "PerformanceAnalytics"
chart.Correlation(corr_centrobank, histogram=TRUE, pch=19)
# Loading and attaching add-on packages
library(devtools)
library(knitr)
library(markdown)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
library(gridExtra)
library(scales)
library(reshape2)
library(plyr)
library(GGally)
library(dplyr)
library(tidyr)
library(xlsx)
library(lubridate)
# Loading and attaching add-on packages
library(corrplot)
library(PerformanceAnalytics)
library(plotly)
library(RCurl)
library(bitops)
library(memisc)
library(dygraphs)
library(xts)
mcorr_centrobank <- cor(corr_centrobank)
corrplot.mixed(mcorr_centrobank, lower="number", upper="pie",
order ="AOE", tl.col="darkblue", tl.cex=0.5)
# Creating the correlation chart from "PerformanceAnalytics"
chart.Correlation(corr_centrobank, histogram=TRUE, pch=19)
mcorr_centrobank <- cor(corr_centrobank)
# Creating the correlation chart with "corrplot"
corrplot.mixed(mcorr_centrobank, lower="number", upper="pie",
order ="AOE", tl.col="darkblue", tl.cex=0.5)
View(mcorr_centrobank)
# Creating the  plot
p5 <- ggplot(centrobank,
aes(x = date, y = BRL_986,
color = format(as.Date(date, format='%d/%m/%Y'), "%Y"))) +
geom_point(size = 2, shape = 5) +
geom_smooth(method = "lm", se = FALSE, size=1)+
scale_colour_brewer(palette='Set1') + theme_bw()+
guides(color=guide_legend(title="year", direction = "horizontal"))
p6 <- ggplot(centrobank,
aes(x = date, y = JPY_392,
color = format(as.Date(date, format='%d/%m/%Y'), "%Y"))) +
geom_point(size = 2, shape = 5) +
geom_smooth(method = "lm", se = FALSE, size=1)+
scale_colour_brewer(palette='Spectral') + theme_bw()
p7 <- ggplot(centrobank,
aes(x = date, y = CNY_156,
color = format(as.Date(date, format='%d/%m/%Y'), "%Y"))) +
geom_point(size = 2, shape = 5) +
geom_smooth(method = "lm", se = FALSE, size=1)+
scale_colour_brewer(palette='Spectral') + theme_bw()
p8 <- ggplot(centrobank,
aes(x = date, y = INR_356,
color = format(as.Date(date, format='%d/%m/%Y'), "%Y"))) +
geom_point(size = 2, shape = 5) +
geom_smooth(method = "lm", se = FALSE, size=1)+
scale_colour_brewer(palette='Spectral') + theme_bw()
get_legend <- function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend_g2 <- get_legend(p5)
g2 <- grid.arrange(arrangeGrob(p5 + theme(legend.position="none"),
p6 + theme(legend.position="none"),
p7 + theme(legend.position="none"),
p8 + theme(legend.position="none"),
ncol=2),
legend_g2,
ncol=1, heights=c(19, 1))
path04=paste(p, 'Bivariate_Plots_5_1.png', sep = '')
ggsave(path04, g2, width = 24, height = 18)
# Creating the scatter plot
p5 <- ggplot(centrobank,
aes(x = date, y = BRL_986,
# point colors
color = format(as.Date(date, format='%d/%m/%Y'), "%Y"))) +
# point options
geom_point(size = 2, shape = 5) +
# options of the smooth line
geom_smooth(method = "lm", se = FALSE, size=1) +
# options of the color scale
scale_colour_brewer(palette='Set1') +
# applying the theme
theme_bw()+
# options of the legend
guides(color=guide_legend(title="year", direction = "horizontal"))
# Creating the scatter plot
p6 <- ggplot(centrobank,
aes(x = date, y = JPY_392,
color = format(as.Date(date, format='%d/%m/%Y'), "%Y"))) +
geom_point(size = 2, shape = 5) +
geom_smooth(method = "lm", se = FALSE, size=1)+
scale_colour_brewer(palette='Spectral') + theme_bw()
get_legend <- function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend_g2 <- get_legend(p5)
g2 <- grid.arrange(arrangeGrob(p5 + theme(legend.position="none"),
p6 + theme(legend.position="none"),
p7 + theme(legend.position="none"),
p8 + theme(legend.position="none"),
ncol=2),
legend_g2,
ncol=1, heights=c(19, 1))
path04=paste(p, 'Bivariate_Plots_5_1.png', sep = '')
ggsave(path04, g2, width = 24, height = 18)
# Creating the scatter plot
p9 <- ggplot(centrobank,
aes(x = date, y=foreign_exchange_reserves,
color = foreign_exchange_reserves)) +
# point options
geom_jitter(size = 2, alpha=0.3, shape = 6) +
# options of the color palette
scale_colour_gradientn(colours=rainbow(10)) +
# options of the smooth line
geom_smooth(aes(y=foreign_exchange_reserves), color = '#FF6633') +
# applying the theme
theme_bw() +
# y-axis options
ylab('foreign exchange reserves, millions of US dollars')
# Combining the plots
g3 <- grid.arrange(p9, p10, ncol = 1)
# Creating the path for the image
path05=paste(p, 'Bivariate_Plots_8_1.png', sep = '')
# Saving the image with histograms
ggsave(path05, g3, width = 12, height = 24)
# Creating the scatter plot by analogy with the p9
p10 <- ggplot(centrobank,
aes(x=date,y=monetary_gold,color = monetary_gold)) +
geom_jitter(size = 2, alpha=0.3, shape = 6) +
scale_colour_gradientn(colours=rainbow(10)) +
geom_smooth(aes(y=monetary_gold), color = '#00FFFF') + theme_bw() +
ylab('monetary gold reserves, millions of US dollars')
# Combining the plots
g3 <- grid.arrange(p9, p10, ncol = 1)
# Creating the path for the image
path05=paste(p, 'Bivariate_Plots_8_1.png', sep = '')
# Saving the image with histograms
ggsave(path05, g3, width = 12, height = 24)
p11 <- ggplot(centrobank, aes(x=dual_currency_basket, y=gold, color = gold)) +
geom_point() + geom_smooth(color = 'darkred') +
scale_colour_gradientn(colours=heat.colors(10)) + theme_bw()
p12 <- ggplot(centrobank, aes(x=dual_currency_basket,y=silver,color = silver)) +
geom_point() + geom_smooth(color = 'darkgreen') +
scale_colour_gradientn(colours=terrain.colors(10)) + theme_bw()
p13 <- ggplot(centrobank, aes (x=dual_currency_basket, y=platinum,
color = platinum)) + geom_point() +
geom_smooth(color='darkred') +
scale_colour_gradientn(colours=heat.colors(10)) + theme_bw()
p14 <- ggplot(centrobank, aes (x=dual_currency_basket, y=palladium,
color = palladium)) +
geom_point() + geom_smooth(color = 'darkgreen') +
scale_colour_gradientn(colours=terrain.colors(10)) + theme_bw()
g4 <- grid.arrange(p11, p12, p13, p14, ncol = 2)
path07=paste(p, 'Bivariate_Plots_13_1.png', sep = '')
ggsave(path07, g4, width = 18, height = 24)
p15 <- ggplot(centrobank, aes(x=dual_currency_basket,y=JPY_392,color=JPY_392)) +
geom_point() + geom_smooth(color = 'darkred') +
scale_colour_gradientn(colours=heat.colors(10)) + theme_bw()
p16 <- ggplot(centrobank,aes(x=dual_currency_basket,y=CNY_156,color = CNY_156))+
geom_point() + geom_smooth(color = 'darkred') +
scale_colour_gradientn(colours=heat.colors(10)) + theme_bw()
p17 <- ggplot(centrobank,aes(x=dual_currency_basket,y=INR_356,color=INR_356)) +
geom_point() + geom_smooth(color='darkred')+
scale_colour_gradientn(colours=heat.colors(10)) + theme_bw()
p18 <- ggplot(centrobank, aes (x=JPY_392, y=CNY_156, color = CNY_156)) +
geom_point() + geom_smooth(color = 'darkgreen') +
scale_colour_gradientn(colours=terrain.colors(10)) + theme_bw()
p19 <- ggplot(centrobank, aes (x=CNY_156, y=INR_356, color = INR_356)) +
geom_point() + geom_smooth(color = 'darkgreen') +
scale_colour_gradientn(colours=terrain.colors(10)) + theme_bw()
p20 <- ggplot(centrobank, aes (x=JPY_392, y=INR_356, color = INR_356)) +
geom_point() + geom_smooth(color = 'darkgreen') +
scale_colour_gradientn(colours=terrain.colors(10)) + theme_bw()
g5 <- grid.arrange(p15, p16, p17, p18, p19, p20, ncol = 3)
path08=paste(p, 'Bivariate_Plots_20_1.png', sep = '')
ggsave(path08, g5, width = 18, height = 24)
p21 <- ggplot(centrobank, aes (x=foreign_exchange_reserves,
y=monetary_gold, color = monetary_gold)) +
geom_jitter(shape = 13, size = 4) + geom_smooth(color = '#00FF99') +
scale_colour_gradientn(colours=terrain.colors(10)) + theme_bw()
p21
path09=paste(p, 'Bivariate_Plots_21_1.png', sep = '')
ggsave(path09, p21, width = 12, height = 8)
# Testing and displaying the results of the correlation tests
with(centrobank, cor.test(dual_currency_basket, gold))
with(centrobank, cor.test(dual_currency_basket, silver))
with(centrobank, cor.test(dual_currency_basket, platinum))
with(centrobank, cor.test(dual_currency_basket, palladium))
# Testing and displaying the results of the correlation tests
with(centrobank, cor.test(dual_currency_basket, JPY_392))
with(centrobank, cor.test(dual_currency_basket, CNY_156))
with(centrobank, cor.test(dual_currency_basket, INR_356))
with(centrobank, cor.test(JPY_392, CNY_156))
with(centrobank, cor.test(JPY_392, INR_356))
with(centrobank, cor.test(INR_356, CNY_156))
# Testing and displaying the results of the correlation tests
with(centrobank, cor.test(foreign_exchange_reserves, monetary_gold))
# Creating the scatter plot
p24 <- ggplot(centrobank, aes(x=dual_currency_basket, y = gold, color = year))+
# options of point and the smooth line
geom_point(shape=10, alpha=0.5, size = 2) + geom_smooth()
# faceting by year
facet_wrap( ~ year, ncol=3, scale = 'free') +
# options for the color palette and for the theme
scale_colour_gradientn(colours=heat.colors(5)) + theme_bw() +
# title
ggtitle('Gold prices and dual currency basket in 2012-2016, rubles')
# Displaying the plot
p24
# Creating the path for the image
path10=paste(p, 'Multivariate_Plots_1_1.png', sep = '')
# Saving the image with plots
ggsave(path10, p24, width = 18, height = 12)
# Creating the scatter plot
p24 <- ggplot(centrobank, aes(x=dual_currency_basket, y = gold, color = year))+
# options of point and the smooth line
geom_point(shape=10, alpha=0.5, size = 2) + geom_smooth() +
# faceting by year
facet_wrap( ~ year, ncol=3, scale = 'free') +
# options for the color palette and for the theme
scale_colour_gradientn(colours=heat.colors(5)) + theme_bw() +
# title
ggtitle('Gold prices and dual currency basket in 2012-2016, rubles')
# Displaying the plot
p24
# Creating the path for the image
path10=paste(p, 'Multivariate_Plots_1_1.png', sep = '')
# Saving the image with plots
ggsave(path10, p24, width = 18, height = 12)
# Creating the 3D-scatter plot with options(text, marker, color, etc.)
pl1 <- plot_ly(centrobank, x=JPY_392, y=CNY_156,
z=INR_356, color = gold,
text = paste(date, "gold price: ", gold),
colors = 'Spectral', type="scatter3d", mode="markers",
marker = list(size = 8, symbol = "circle-open"))
# Creating layout of the plot
pl2 <- layout(pl1, title = "Prices for Gold and Rates for JPY, CNY, INR",
scene = list(
xaxis = list(title = "JPY 392"),
yaxis = list(title = "CNY 156"),
zaxis = list(title = "INR_356")))
# Displaying the plot
pl2
# Creating the 3D-scatter plot with options(text, marker, color, etc.)
pl3 <- plot_ly(centrobank, x=gold, y=silver, z=platinum,
color = dual_currency_basket,
text = paste(date,
"dual currency basket: ", dual_currency_basket),
colors = 'Spectral', type="scatter3d", mode="markers",
marker = list(size = 8, symbol = "diamond-open"))
# Creating layout of the plot
pl4 <- layout(pl3, title = "Prices for Gold, Silver,
Platinum and Dual Currency Basket",
scene = list(
xaxis = list(title = "gold"),
yaxis = list(title = "silver"),
zaxis = list(title = "platinum")))
# Displaying the plot
pl4
# Creating the new dataset with year means
centrobank_y <- aggregate(corr_centrobank, list(centrobank$year), mean)
# Adding the variable for the price of 100 g of silver
centrobank_y$silver100 <- 100*centrobank_y$silver
# Creating the new dataset with year means
centrobank_y <- aggregate(corr_centrobank, list(centrobank$year), mean)
# Adding the variable for the price of 100 g of silver
centrobank_y$silver100 <- 100*centrobank_y$silver
# Adding the variables for the title and names of axes
t1='Year Means of Prices for Precious Metals/Year means of Dual Currency Basket'
x1 = 'year'
y1 = 'mean of prices for precious metals/mean of dual currency basket'
# Creating the bar plot
p130 <- plot_ly(centrobank_y, x=c(2012,2013,2014,2015,2016),
y =gold/dual_currency_basket,
name = "gold / dual currancy basket", type = "bar")
# Adding the variable
p131 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=silver100/dual_currency_basket,
name = "silver100 / dual currancy basket", type = "bar")
# Adding the variable
p132 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=palladium/dual_currency_basket,
name = "palladium / dual currency basket", type = "bar")
# Adding the variable
p133 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=platinum/dual_currency_basket,
name = "platinum / dual currency basket", type = "bar")
# Creating layout of the plot
pl5 <- layout(p133, title = t1,
xaxis = list(title = x1, showgrid = F),
yaxis = list(title = y1, showgrid = F))
# Displaying the plot
pl5
# Adding the variables for the title and names of axes
t1='Year Means of Prices for Precious Metals/Year means of Dual Currency Basket'
x1 = 'year'
y1 = 'mean of prices for precious metals/mean of dual currency basket'
# Creating the bar plot
p130 <- plot_ly(centrobank_y, x=c(2012,2013,2014,2015,2016),
y =gold/dual_currency_basket,
name = "gold / dual currancy basket", type = "bar")
# Adding the variable
p131 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=silver100/dual_currency_basket,
name = "silver100 / dual currancy basket", type = "bar")
# Adding the variable
p132 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=palladium/dual_currency_basket,
name = "palladium / dual currency basket", type = "bar")
# Adding the variable
p133 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=platinum/dual_currency_basket,
name = "platinum / dual currency basket", type = "bar")
# Creating layout of the plot
pl5 <- layout(p133, title = t1,
xaxis = list(title = x1, showgrid = F),
yaxis = list(title = y1, showgrid = F))
# Displaying the plot
pl5
# Adding the variables for the title and names of axes
t1='Year Means of Prices for Precious Metals/Year means of Dual Currency Basket'
x1 = 'year'
y1 = 'mean of prices for precious metals/mean of dual currency basket'
# Creating the bar plot
p130 <- plot_ly(centrobank_y, x=c(2012,2013,2014,2015,2016),
y =gold/dual_currency_basket,
name = "gold / dual currancy basket", type = "bar")
# Adding the variable
p131 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=silver100/dual_currency_basket,
name = "silver100 / dual currancy basket", type = "bar")
# Adding the variable
p132 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=palladium/dual_currency_basket,
name = "palladium / dual currency basket", type = "bar")
# Adding the variable
p133 <- add_trace(centrobank_y, x=c(2012,2013,2014,2015,2016),
y=platinum/dual_currency_basket,
name = "platinum / dual currency basket", type = "bar")
# Creating layout of the plot
pl5 <- layout(p133, title = t1,
xaxis = list(title = x1, showgrid = F),
yaxis = list(title = y1, showgrid = F))
# Displaying the plot
pl5
# Creating and adding the variables for indicators with coefficients
centrobank$USD50 <- 50*centrobank$USD_840
centrobank$EUR50 <- 50*centrobank$EUR_978
centrobank$CNY300 <- 300*centrobank$CNY_156
centrobank$JPY4000 <- 4000*centrobank$JPY_392
centrobank$BRL100 <- 100*centrobank$BRL_986
centrobank$INR3000 <- 3000*centrobank$INR_356
centrobank$silver100 <- 100*centrobank$silver
# Creating the dataset with time series
centrobank_xts <- xts(centrobank[, -1], centrobank[, 1])
# Creating the variable for list of currencies
list_v1 <- c("EUR50", "USD50", "CNY300", "JPY4000", "BRL100", "INR3000")
# Creating the dataset with time series of currencies
rates_xts <- (centrobank_xts[,list_v1])
dygraph(rates_xts, main = "Exchange Rates" ) %>%
dyOptions(colors = RColorBrewer::brewer.pal(6, "Set2")) %>%
dyHighlight(highlightCircleSize = 4,
highlightSeriesBackgroundAlpha = 0.5,
hideOnMouseOut = FALSE)
# Creating the line plot
dygraph(rates_xts, main = "Exchange Rates" ) %>%
# color options
dyOptions(colors = RColorBrewer::brewer.pal(6, "Set2")) %>%
# displaying options
dyHighlight(highlightCircleSize = 4,
highlightSeriesBackgroundAlpha = 0.5,
hideOnMouseOut = FALSE)
# Creating the variable for the list of metals
list_v2 <- c("gold", "platinum", "palladium", "silver100")
# Creating the dataset with time series of metal prices
prices_xts <- (centrobank_xts[,list_v2])
# Creating the line plot
dygraph(prices_xts, main = "Prices for Precious Metals" ) %>%
# color options
dyOptions(colors = RColorBrewer::brewer.pal(4, "Set2")) %>%
# displaying options
dyHighlight(highlightCircleSize = 4,
highlightSeriesBackgroundAlpha = 0.5,
hideOnMouseOut = FALSE)
# Creating the variable for the list of metals and currencies
list_vf <- c("EUR50", "USD50", "CNY300", "gold", "platinum")
# Creating the dataset with time series
data_xts <- (centrobank_xts[,list_vf])
# Creating the line plot
dygraph(data_xts, main = "Prices for Precious Metals and Exchange Rates" ) %>%
# color options
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set1")) %>%
# displaying options
dyHighlight(highlightCircleSize = 4,
highlightSeriesBackgroundAlpha = 0.5,
hideOnMouseOut = FALSE)
p25 <- ggplot(centrobank,
aes(x=dual_currency_basket,
y = (gold+silver+platinum+palladium)/4, color = year)) +
geom_point(shape=7, alpha=0.5, size = 2) + geom_smooth() +
scale_colour_gradientn(colours=rainbow(5)) +
ggtitle('Mean of prices for precious metals and dual currency basket,
rubles') + theme_bw()
p25 <- ggplot(centrobank,
aes(x=dual_currency_basket,
y = (gold+silver+platinum+palladium)/4, color = year)) +
geom_point(shape=7, alpha=0.5, size = 2) + geom_smooth() +
scale_colour_gradientn(colours=rainbow(5)) +
ggtitle('Mean of prices for precious metals and dual currency basket,
rubles') + theme_bw()
p25 <- ggplot(centrobank,
aes(x=dual_currency_basket,
y = (gold+silver+platinum+palladium)/4, color = year)) +
geom_point(shape=7, alpha=0.5, size = 2) + geom_smooth() +
scale_colour_gradientn(colours=rainbow(5)) +
ggtitle('Mean of prices for precious metals and dual currency basket,
rubles') + theme_bw()
p26 <- ggplot(centrobank,
aes(x=dual_currency_basket,
y = (gold+silver+platinum+palladium)/4, color = year)) +
geom_point(shape=7, alpha=0.5, size = 2) +
facet_wrap( ~ year, ncol=3, scale = 'free') + geom_smooth() +
scale_colour_gradientn(colours=rainbow(5)) +
ggtitle('Mean of prices for precious metals and dual currency basket,
rubles') + theme_bw()
p_final3 <- grid.arrange(p25, p26, ncol=1)
path12=paste(p, 'Plot_Three_3_1.png', sep = '')
ggsave(path12, p_final3, width = 18, height = 24)
